### YamlMime:ManagedReference
items:
- uid: Warbler.Hubs.ProximityHub
  commentId: T:Warbler.Hubs.ProximityHub
  id: ProximityHub
  parent: Warbler.Hubs
  children:
  - Warbler.Hubs.ProximityHub.#ctor(Warbler.Services.ProximityService,Warbler.Misc.WarblerDbContext)
  - Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync(System.String)
  - Warbler.Hubs.ProximityHub.OnDisconnectedAsync(System.Exception)
  - Warbler.Hubs.ProximityHub.SelectUniversityAsync(System.String)
  langs:
  - csharp
  - vb
  name: ProximityHub
  nameWithType: ProximityHub
  fullName: Warbler.Hubs.ProximityHub
  type: Class
  source:
    id: ProximityHub
    path: ''
    startLine: 1281
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Hubs
  summary: "\nCoordinates websocket communication between\nclients and server on the chat index view.\n"
  example: []
  syntax:
    content: 'public class ProximityHub : Hub'
    content.vb: >-
      Public Class ProximityHub
          Inherits Hub
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Hubs.ProximityHub.#ctor(Warbler.Services.ProximityService,Warbler.Misc.WarblerDbContext)
  commentId: M:Warbler.Hubs.ProximityHub.#ctor(Warbler.Services.ProximityService,Warbler.Misc.WarblerDbContext)
  id: '#ctor(Warbler.Services.ProximityService,Warbler.Misc.WarblerDbContext)'
  parent: Warbler.Hubs.ProximityHub
  langs:
  - csharp
  - vb
  name: ProximityHub(ProximityService, WarblerDbContext)
  nameWithType: ProximityHub.ProximityHub(ProximityService, WarblerDbContext)
  fullName: Warbler.Hubs.ProximityHub.ProximityHub(Warbler.Services.ProximityService, Warbler.Misc.WarblerDbContext)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1290
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Hubs
  summary: "\nAutomatically called each time SignalR receives a packet from a client.\nBoth parameters are injected automatically by ASP.NET DI.\n"
  example: []
  syntax:
    content: public ProximityHub(ProximityService service, WarblerDbContext context)
    parameters:
    - id: service
      type: Warbler.Services.ProximityService
    - id: context
      type: Warbler.Misc.WarblerDbContext
    content.vb: Public Sub New(service As ProximityService, context As WarblerDbContext)
  overload: Warbler.Hubs.ProximityHub.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Hubs.ProximityHub.OnDisconnectedAsync(System.Exception)
  commentId: M:Warbler.Hubs.ProximityHub.OnDisconnectedAsync(System.Exception)
  id: OnDisconnectedAsync(System.Exception)
  parent: Warbler.Hubs.ProximityHub
  langs:
  - csharp
  - vb
  name: OnDisconnectedAsync(Exception)
  nameWithType: ProximityHub.OnDisconnectedAsync(Exception)
  fullName: Warbler.Hubs.ProximityHub.OnDisconnectedAsync(System.Exception)
  type: Method
  source:
    id: OnDisconnectedAsync
    path: ''
    startLine: 1296
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Hubs
  syntax:
    content: public override Task OnDisconnectedAsync(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: Task
    content.vb: Public Overrides Function OnDisconnectedAsync(exception As Exception) As Task
  overload: Warbler.Hubs.ProximityHub.OnDisconnectedAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync(System.String)
  commentId: M:Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync(System.String)
  id: GetNearbyUniversitiesAsync(System.String)
  parent: Warbler.Hubs.ProximityHub
  langs:
  - csharp
  - vb
  name: GetNearbyUniversitiesAsync(String)
  nameWithType: ProximityHub.GetNearbyUniversitiesAsync(String)
  fullName: Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync(System.String)
  type: Method
  source:
    id: GetNearbyUniversitiesAsync
    path: ''
    startLine: 1307
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Hubs
  summary: "\nCalled via SignalR when the user enters the Chat view\nwithout being a member of any universities.\n"
  example: []
  syntax:
    content: public Task GetNearbyUniversitiesAsync(string locationSer)
    parameters:
    - id: locationSer
      type: System.String
      description: The serialized location (lat/lng).
    return:
      type: Task
    content.vb: Public Function GetNearbyUniversitiesAsync(locationSer As String) As Task
  overload: Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Hubs.ProximityHub.SelectUniversityAsync(System.String)
  commentId: M:Warbler.Hubs.ProximityHub.SelectUniversityAsync(System.String)
  id: SelectUniversityAsync(System.String)
  parent: Warbler.Hubs.ProximityHub
  langs:
  - csharp
  - vb
  name: SelectUniversityAsync(String)
  nameWithType: ProximityHub.SelectUniversityAsync(String)
  fullName: Warbler.Hubs.ProximityHub.SelectUniversityAsync(System.String)
  type: Method
  source:
    id: SelectUniversityAsync
    path: ''
    startLine: 1319
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Hubs
  summary: "\nCalled via SignalR when the user clicks on a university to connect to.\n"
  example: []
  syntax:
    content: public Task SelectUniversityAsync(string placeId)
    parameters:
    - id: placeId
      type: System.String
      description: The Google Place ID of the clicked university.
    return:
      type: Task
    content.vb: Public Function SelectUniversityAsync(placeId As String) As Task
  overload: Warbler.Hubs.ProximityHub.SelectUniversityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Warbler.Hubs
  commentId: N:Warbler.Hubs
  isExternal: false
  name: Warbler.Hubs
  nameWithType: Warbler.Hubs
  fullName: Warbler.Hubs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Hubs.ProximityHub.#ctor*
  commentId: Overload:Warbler.Hubs.ProximityHub.#ctor
  isExternal: false
  name: ProximityHub
  nameWithType: ProximityHub.ProximityHub
  fullName: Warbler.Hubs.ProximityHub.ProximityHub
- uid: Warbler.Services.ProximityService
  commentId: T:Warbler.Services.ProximityService
  parent: Warbler.Services
  isExternal: false
  name: ProximityService
  nameWithType: ProximityService
  fullName: Warbler.Services.ProximityService
- uid: Warbler.Misc.WarblerDbContext
  commentId: T:Warbler.Misc.WarblerDbContext
  parent: Warbler.Misc
  isExternal: false
  name: WarblerDbContext
  nameWithType: WarblerDbContext
  fullName: Warbler.Misc.WarblerDbContext
- uid: Warbler.Services
  commentId: N:Warbler.Services
  isExternal: false
  name: Warbler.Services
  nameWithType: Warbler.Services
  fullName: Warbler.Services
- uid: Warbler.Misc
  commentId: N:Warbler.Misc
  isExternal: false
  name: Warbler.Misc
  nameWithType: Warbler.Misc
  fullName: Warbler.Misc
- uid: Warbler.Hubs.ProximityHub.OnDisconnectedAsync*
  commentId: Overload:Warbler.Hubs.ProximityHub.OnDisconnectedAsync
  isExternal: false
  name: OnDisconnectedAsync
  nameWithType: ProximityHub.OnDisconnectedAsync
  fullName: Warbler.Hubs.ProximityHub.OnDisconnectedAsync
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync*
  commentId: Overload:Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync
  isExternal: false
  name: GetNearbyUniversitiesAsync
  nameWithType: ProximityHub.GetNearbyUniversitiesAsync
  fullName: Warbler.Hubs.ProximityHub.GetNearbyUniversitiesAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Warbler.Hubs.ProximityHub.SelectUniversityAsync*
  commentId: Overload:Warbler.Hubs.ProximityHub.SelectUniversityAsync
  isExternal: false
  name: SelectUniversityAsync
  nameWithType: ProximityHub.SelectUniversityAsync
  fullName: Warbler.Hubs.ProximityHub.SelectUniversityAsync
