### YamlMime:ManagedReference
items:
- uid: Warbler.Interfaces.IChannelTemplateRepository
  commentId: T:Warbler.Interfaces.IChannelTemplateRepository
  id: IChannelTemplateRepository
  parent: Warbler.Interfaces
  children:
  - Warbler.Interfaces.IChannelTemplateRepository.CreateAsync(Warbler.Models.ChannelTemplate,System.Boolean)
  - Warbler.Interfaces.IChannelTemplateRepository.GetAsync
  langs:
  - csharp
  - vb
  name: IChannelTemplateRepository
  nameWithType: IChannelTemplateRepository
  fullName: Warbler.Interfaces.IChannelTemplateRepository
  type: Interface
  source:
    id: IChannelTemplateRepository
    path: ''
    startLine: 1650
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Interfaces
  syntax:
    content: public interface IChannelTemplateRepository
    content.vb: Public Interface IChannelTemplateRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Warbler.Interfaces.IChannelTemplateRepository.CreateAsync(Warbler.Models.ChannelTemplate,System.Boolean)
  commentId: M:Warbler.Interfaces.IChannelTemplateRepository.CreateAsync(Warbler.Models.ChannelTemplate,System.Boolean)
  id: CreateAsync(Warbler.Models.ChannelTemplate,System.Boolean)
  parent: Warbler.Interfaces.IChannelTemplateRepository
  langs:
  - csharp
  - vb
  name: CreateAsync(ChannelTemplate, Boolean)
  nameWithType: IChannelTemplateRepository.CreateAsync(ChannelTemplate, Boolean)
  fullName: Warbler.Interfaces.IChannelTemplateRepository.CreateAsync(Warbler.Models.ChannelTemplate, System.Boolean)
  type: Method
  source:
    id: CreateAsync
    path: ''
    startLine: 1660
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Interfaces
  summary: "\nAdds a new channel template to the database.\n"
  example: []
  syntax:
    content: Task CreateAsync(ChannelTemplate channelTemplate, bool saveChanges = false)
    parameters:
    - id: channelTemplate
      type: Warbler.Models.ChannelTemplate
      description: The template to create.
    - id: saveChanges
      type: System.Boolean
      description: "\nTrue to have this call also save all templates\nthat have been added to the context (default: false)\n"
    return:
      type: Task
    content.vb: Function CreateAsync(channelTemplate As ChannelTemplate, saveChanges As Boolean = False) As Task
  overload: Warbler.Interfaces.IChannelTemplateRepository.CreateAsync*
- uid: Warbler.Interfaces.IChannelTemplateRepository.GetAsync
  commentId: M:Warbler.Interfaces.IChannelTemplateRepository.GetAsync
  id: GetAsync
  parent: Warbler.Interfaces.IChannelTemplateRepository
  langs:
  - csharp
  - vb
  name: GetAsync()
  nameWithType: IChannelTemplateRepository.GetAsync()
  fullName: Warbler.Interfaces.IChannelTemplateRepository.GetAsync()
  type: Method
  source:
    id: GetAsync
    path: ''
    startLine: 1666
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Interfaces
  summary: "\nRetrieves all channel templates from the database.\n"
  example: []
  syntax:
    content: Task<List<ChannelTemplate>> GetAsync()
    return:
      type: Task{System.Collections.Generic.List{Warbler.Models.ChannelTemplate}}
      description: A list of channel templates.
    content.vb: Function GetAsync As Task(Of List(Of ChannelTemplate))
  overload: Warbler.Interfaces.IChannelTemplateRepository.GetAsync*
references:
- uid: Warbler.Interfaces
  commentId: N:Warbler.Interfaces
  isExternal: false
  name: Warbler.Interfaces
  nameWithType: Warbler.Interfaces
  fullName: Warbler.Interfaces
- uid: Warbler.Interfaces.IChannelTemplateRepository.CreateAsync*
  commentId: Overload:Warbler.Interfaces.IChannelTemplateRepository.CreateAsync
  isExternal: false
  name: CreateAsync
  nameWithType: IChannelTemplateRepository.CreateAsync
  fullName: Warbler.Interfaces.IChannelTemplateRepository.CreateAsync
- uid: Warbler.Models.ChannelTemplate
  commentId: T:Warbler.Models.ChannelTemplate
  parent: Warbler.Models
  isExternal: false
  name: ChannelTemplate
  nameWithType: ChannelTemplate
  fullName: Warbler.Models.ChannelTemplate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Warbler.Models
  commentId: N:Warbler.Models
  isExternal: false
  name: Warbler.Models
  nameWithType: Warbler.Models
  fullName: Warbler.Models
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Interfaces.IChannelTemplateRepository.GetAsync*
  commentId: Overload:Warbler.Interfaces.IChannelTemplateRepository.GetAsync
  isExternal: false
  name: GetAsync
  nameWithType: IChannelTemplateRepository.GetAsync
  fullName: Warbler.Interfaces.IChannelTemplateRepository.GetAsync
- uid: Task{System.Collections.Generic.List{Warbler.Models.ChannelTemplate}}
  commentId: '!:Task{System.Collections.Generic.List{Warbler.Models.ChannelTemplate}}'
  definition: Task`1
  name: Task<List<ChannelTemplate>>
  nameWithType: Task<List<ChannelTemplate>>
  fullName: Task<System.Collections.Generic.List<Warbler.Models.ChannelTemplate>>
  nameWithType.vb: Task(Of List(Of ChannelTemplate))
  fullName.vb: Task(Of System.Collections.Generic.List(Of Warbler.Models.ChannelTemplate))
  name.vb: Task(Of List(Of ChannelTemplate))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Models.ChannelTemplate
    name: ChannelTemplate
    nameWithType: ChannelTemplate
    fullName: Warbler.Models.ChannelTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Models.ChannelTemplate
    name: ChannelTemplate
    nameWithType: ChannelTemplate
    fullName: Warbler.Models.ChannelTemplate
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
