### YamlMime:ManagedReference
items:
- uid: Warbler.Models.AccountViewModels.RegisterViewModel
  commentId: T:Warbler.Models.AccountViewModels.RegisterViewModel
  id: RegisterViewModel
  parent: Warbler.Models.AccountViewModels
  children:
  - Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  - Warbler.Models.AccountViewModels.RegisterViewModel.Email
  - Warbler.Models.AccountViewModels.RegisterViewModel.Password
  - Warbler.Models.AccountViewModels.RegisterViewModel.Username
  langs:
  - csharp
  - vb
  name: RegisterViewModel
  nameWithType: RegisterViewModel
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel
  type: Class
  source:
    id: RegisterViewModel
    path: ''
    startLine: 2233
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.AccountViewModels
  syntax:
    content: public class RegisterViewModel
    content.vb: Public Class RegisterViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.Email
  commentId: P:Warbler.Models.AccountViewModels.RegisterViewModel.Email
  id: Email
  parent: Warbler.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RegisterViewModel.Email
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.Email
  type: Property
  source:
    id: Email
    path: ''
    startLine: 2235
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.AccountViewModels
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Warbler.Models.AccountViewModels.RegisterViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.Username
  commentId: P:Warbler.Models.AccountViewModels.RegisterViewModel.Username
  id: Username
  parent: Warbler.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: RegisterViewModel.Username
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.Username
  type: Property
  source:
    id: Username
    path: ''
    startLine: 2240
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.AccountViewModels
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: Warbler.Models.AccountViewModels.RegisterViewModel.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.Password
  commentId: P:Warbler.Models.AccountViewModels.RegisterViewModel.Password
  id: Password
  parent: Warbler.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.Password
  type: Property
  source:
    id: Password
    path: ''
    startLine: 2244
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.AccountViewModels
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Warbler.Models.AccountViewModels.RegisterViewModel.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  commentId: P:Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  id: ConfirmPassword
  parent: Warbler.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  type: Property
  source:
    id: ConfirmPassword
    path: ''
    startLine: 2249
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.AccountViewModels
  syntax:
    content: public string ConfirmPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConfirmPassword As String
  overload: Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Warbler.Models.AccountViewModels
  commentId: N:Warbler.Models.AccountViewModels
  isExternal: false
  name: Warbler.Models.AccountViewModels
  nameWithType: Warbler.Models.AccountViewModels
  fullName: Warbler.Models.AccountViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.Email*
  commentId: Overload:Warbler.Models.AccountViewModels.RegisterViewModel.Email
  isExternal: false
  name: Email
  nameWithType: RegisterViewModel.Email
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.Email
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.Username*
  commentId: Overload:Warbler.Models.AccountViewModels.RegisterViewModel.Username
  isExternal: false
  name: Username
  nameWithType: RegisterViewModel.Username
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.Username
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.Password*
  commentId: Overload:Warbler.Models.AccountViewModels.RegisterViewModel.Password
  isExternal: false
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.Password
- uid: Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword*
  commentId: Overload:Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  isExternal: false
  name: ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
  fullName: Warbler.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
