### YamlMime:ManagedReference
items:
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  commentId: T:Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  id: ClaimUniversityViewModel
  parent: Warbler.Models.ManageViewModels
  children:
  - Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor
  - Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor(System.Collections.Generic.List{Warbler.Models.University})
  - Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest
  - Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices
  langs:
  - csharp
  - vb
  name: ClaimUniversityViewModel
  nameWithType: ClaimUniversityViewModel
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  type: Class
  source:
    id: ClaimUniversityViewModel
    path: ''
    startLine: 2920
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.ManageViewModels
  syntax:
    content: public class ClaimUniversityViewModel
    content.vb: Public Class ClaimUniversityViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor
  commentId: M:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor
  id: '#ctor'
  parent: Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  langs:
  - csharp
  - vb
  name: ClaimUniversityViewModel()
  nameWithType: ClaimUniversityViewModel.ClaimUniversityViewModel()
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimUniversityViewModel()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2925
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.ManageViewModels
  summary: "\nParameterless ctor used by MVC for model binding.\n"
  example: []
  syntax:
    content: public ClaimUniversityViewModel()
    content.vb: Public Sub New
  overload: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor(System.Collections.Generic.List{Warbler.Models.University})
  commentId: M:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor(System.Collections.Generic.List{Warbler.Models.University})
  id: '#ctor(System.Collections.Generic.List{Warbler.Models.University})'
  parent: Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  langs:
  - csharp
  - vb
  name: ClaimUniversityViewModel(List<University>)
  nameWithType: ClaimUniversityViewModel.ClaimUniversityViewModel(List<University>)
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimUniversityViewModel(System.Collections.Generic.List<Warbler.Models.University>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2927
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.ManageViewModels
  syntax:
    content: public ClaimUniversityViewModel(List<University> universities)
    parameters:
    - id: universities
      type: System.Collections.Generic.List{Warbler.Models.University}
    content.vb: Public Sub New(universities As List(Of University))
  overload: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor*
  nameWithType.vb: ClaimUniversityViewModel.ClaimUniversityViewModel(List(Of University))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimUniversityViewModel(System.Collections.Generic.List(Of Warbler.Models.University))
  name.vb: ClaimUniversityViewModel(List(Of University))
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest
  commentId: P:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest
  id: ClaimRequest
  parent: Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  langs:
  - csharp
  - vb
  name: ClaimRequest
  nameWithType: ClaimUniversityViewModel.ClaimRequest
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest
  type: Property
  source:
    id: ClaimRequest
    path: ''
    startLine: 2930
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.ManageViewModels
  syntax:
    content: public ClaimRequest ClaimRequest { get; set; }
    parameters: []
    return:
      type: Warbler.Models.ClaimRequest
    content.vb: Public Property ClaimRequest As ClaimRequest
  overload: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices
  commentId: P:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices
  id: UniversityChoices
  parent: Warbler.Models.ManageViewModels.ClaimUniversityViewModel
  langs:
  - csharp
  - vb
  name: UniversityChoices
  nameWithType: ClaimUniversityViewModel.UniversityChoices
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices
  type: Property
  source:
    id: UniversityChoices
    path: ''
    startLine: 2931
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models.ManageViewModels
  syntax:
    content: public List<University> UniversityChoices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Warbler.Models.University}
    content.vb: Public ReadOnly Property UniversityChoices As List(Of University)
  overload: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Warbler.Models.ManageViewModels
  commentId: N:Warbler.Models.ManageViewModels
  isExternal: false
  name: Warbler.Models.ManageViewModels
  nameWithType: Warbler.Models.ManageViewModels
  fullName: Warbler.Models.ManageViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor*
  commentId: Overload:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.#ctor
  isExternal: false
  name: ClaimUniversityViewModel
  nameWithType: ClaimUniversityViewModel.ClaimUniversityViewModel
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimUniversityViewModel
- uid: System.Collections.Generic.List{Warbler.Models.University}
  commentId: T:System.Collections.Generic.List{Warbler.Models.University}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<University>
  nameWithType: List<University>
  fullName: System.Collections.Generic.List<Warbler.Models.University>
  nameWithType.vb: List(Of University)
  fullName.vb: System.Collections.Generic.List(Of Warbler.Models.University)
  name.vb: List(Of University)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Models.University
    name: University
    nameWithType: University
    fullName: Warbler.Models.University
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Models.University
    name: University
    nameWithType: University
    fullName: Warbler.Models.University
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest*
  commentId: Overload:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest
  isExternal: false
  name: ClaimRequest
  nameWithType: ClaimUniversityViewModel.ClaimRequest
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.ClaimRequest
- uid: Warbler.Models.ClaimRequest
  commentId: T:Warbler.Models.ClaimRequest
  parent: Warbler.Models
  isExternal: false
  name: ClaimRequest
  nameWithType: ClaimRequest
  fullName: Warbler.Models.ClaimRequest
- uid: Warbler.Models
  commentId: N:Warbler.Models
  isExternal: false
  name: Warbler.Models
  nameWithType: Warbler.Models
  fullName: Warbler.Models
- uid: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices*
  commentId: Overload:Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices
  isExternal: false
  name: UniversityChoices
  nameWithType: ClaimUniversityViewModel.UniversityChoices
  fullName: Warbler.Models.ManageViewModels.ClaimUniversityViewModel.UniversityChoices
