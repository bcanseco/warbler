### YamlMime:ManagedReference
items:
- uid: Warbler.Models.University
  commentId: T:Warbler.Models.University
  id: University
  parent: Warbler.Models
  children:
  - Warbler.Models.University.Address
  - Warbler.Models.University.ClaimedBy
  - Warbler.Models.University.ClaimedById
  - Warbler.Models.University.Equals(System.Object)
  - Warbler.Models.University.Equals(Warbler.Models.University)
  - Warbler.Models.University.GetHashCode
  - Warbler.Models.University.Id
  - Warbler.Models.University.Lat
  - Warbler.Models.University.Lng
  - Warbler.Models.University.Name
  - Warbler.Models.University.op_Equality(Warbler.Models.University,Warbler.Models.University)
  - Warbler.Models.University.op_Inequality(Warbler.Models.University,Warbler.Models.University)
  - Warbler.Models.University.PlaceId
  - Warbler.Models.University.Server
  langs:
  - csharp
  - vb
  name: University
  nameWithType: University
  fullName: Warbler.Models.University
  type: Class
  source:
    id: University
    path: ''
    startLine: 2379
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: 'public class University : IEquatable<University>'
    content.vb: >-
      Public Class University
          Implements IEquatable(Of University)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Warbler.Models.University}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Models.University.Id
  commentId: P:Warbler.Models.University.Id
  id: Id
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: University.Id
  fullName: Warbler.Models.University.Id
  type: Property
  source:
    id: Id
    path: ''
    startLine: 2382
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Warbler.Models.University.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.PlaceId
  commentId: P:Warbler.Models.University.PlaceId
  id: PlaceId
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: PlaceId
  nameWithType: University.PlaceId
  fullName: Warbler.Models.University.PlaceId
  type: Property
  source:
    id: PlaceId
    path: ''
    startLine: 2383
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public string PlaceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PlaceId As String
  overload: Warbler.Models.University.PlaceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Address
  commentId: P:Warbler.Models.University.Address
  id: Address
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: University.Address
  fullName: Warbler.Models.University.Address
  type: Property
  source:
    id: Address
    path: ''
    startLine: 2384
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Address As String
  overload: Warbler.Models.University.Address*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Name
  commentId: P:Warbler.Models.University.Name
  id: Name
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: University.Name
  fullName: Warbler.Models.University.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 2385
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Warbler.Models.University.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Lat
  commentId: P:Warbler.Models.University.Lat
  id: Lat
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Lat
  nameWithType: University.Lat
  fullName: Warbler.Models.University.Lat
  type: Property
  source:
    id: Lat
    path: ''
    startLine: 2386
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public float Lat { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Lat As Single
  overload: Warbler.Models.University.Lat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Lng
  commentId: P:Warbler.Models.University.Lng
  id: Lng
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Lng
  nameWithType: University.Lng
  fullName: Warbler.Models.University.Lng
  type: Property
  source:
    id: Lng
    path: ''
    startLine: 2387
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public float Lng { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Lng As Single
  overload: Warbler.Models.University.Lng*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Server
  commentId: P:Warbler.Models.University.Server
  id: Server
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: University.Server
  fullName: Warbler.Models.University.Server
  type: Property
  source:
    id: Server
    path: ''
    startLine: 2389
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public Server Server { get; set; }
    parameters: []
    return:
      type: Warbler.Models.Server
    content.vb: Public Property Server As Server
  overload: Warbler.Models.University.Server*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.ClaimedBy
  commentId: P:Warbler.Models.University.ClaimedBy
  id: ClaimedBy
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: ClaimedBy
  nameWithType: University.ClaimedBy
  fullName: Warbler.Models.University.ClaimedBy
  type: Property
  source:
    id: ClaimedBy
    path: ''
    startLine: 2391
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public User ClaimedBy { get; set; }
    parameters: []
    return:
      type: Warbler.Models.User
    content.vb: Public Property ClaimedBy As User
  overload: Warbler.Models.University.ClaimedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.ClaimedById
  commentId: P:Warbler.Models.University.ClaimedById
  id: ClaimedById
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: ClaimedById
  nameWithType: University.ClaimedById
  fullName: Warbler.Models.University.ClaimedById
  type: Property
  source:
    id: ClaimedById
    path: ''
    startLine: 2392
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public string ClaimedById { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClaimedById As String
  overload: Warbler.Models.University.ClaimedById*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Equals(Warbler.Models.University)
  commentId: M:Warbler.Models.University.Equals(Warbler.Models.University)
  id: Equals(Warbler.Models.University)
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Equals(University)
  nameWithType: University.Equals(University)
  fullName: Warbler.Models.University.Equals(Warbler.Models.University)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2394
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public bool Equals(University other)
    parameters:
    - id: other
      type: Warbler.Models.University
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As University) As Boolean
  overload: Warbler.Models.University.Equals*
  implements:
  - System.IEquatable{Warbler.Models.University}.Equals(Warbler.Models.University)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Models.University.Equals(System.Object)
  commentId: M:Warbler.Models.University.Equals(System.Object)
  id: Equals(System.Object)
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: University.Equals(Object)
  fullName: Warbler.Models.University.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2401
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Warbler.Models.University.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Warbler.Models.University.GetHashCode
  commentId: M:Warbler.Models.University.GetHashCode
  id: GetHashCode
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: University.GetHashCode()
  fullName: Warbler.Models.University.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 2408
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Warbler.Models.University.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Warbler.Models.University.op_Equality(Warbler.Models.University,Warbler.Models.University)
  commentId: M:Warbler.Models.University.op_Equality(Warbler.Models.University,Warbler.Models.University)
  id: op_Equality(Warbler.Models.University,Warbler.Models.University)
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Equality(University, University)
  nameWithType: University.Equality(University, University)
  fullName: Warbler.Models.University.Equality(Warbler.Models.University, Warbler.Models.University)
  type: Operator
  source:
    id: op_Equality
    path: ''
    startLine: 2409
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public static bool operator ==(University left, University right)
    parameters:
    - id: left
      type: Warbler.Models.University
    - id: right
      type: Warbler.Models.University
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As University, right As University) As Boolean
  overload: Warbler.Models.University.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Warbler.Models.University.op_Inequality(Warbler.Models.University,Warbler.Models.University)
  commentId: M:Warbler.Models.University.op_Inequality(Warbler.Models.University,Warbler.Models.University)
  id: op_Inequality(Warbler.Models.University,Warbler.Models.University)
  parent: Warbler.Models.University
  langs:
  - csharp
  - vb
  name: Inequality(University, University)
  nameWithType: University.Inequality(University, University)
  fullName: Warbler.Models.University.Inequality(Warbler.Models.University, Warbler.Models.University)
  type: Operator
  source:
    id: op_Inequality
    path: ''
    startLine: 2410
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public static bool operator !=(University left, University right)
    parameters:
    - id: left
      type: Warbler.Models.University
    - id: right
      type: Warbler.Models.University
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As University, right As University) As Boolean
  overload: Warbler.Models.University.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Warbler.Models
  commentId: N:Warbler.Models
  isExternal: false
  name: Warbler.Models
  nameWithType: Warbler.Models
  fullName: Warbler.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Warbler.Models.University}
  commentId: T:System.IEquatable{Warbler.Models.University}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<University>
  nameWithType: IEquatable<University>
  fullName: System.IEquatable<Warbler.Models.University>
  nameWithType.vb: IEquatable(Of University)
  fullName.vb: System.IEquatable(Of Warbler.Models.University)
  name.vb: IEquatable(Of University)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Models.University
    name: University
    nameWithType: University
    fullName: Warbler.Models.University
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Models.University
    name: University
    nameWithType: University
    fullName: Warbler.Models.University
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.University.Id*
  commentId: Overload:Warbler.Models.University.Id
  isExternal: false
  name: Id
  nameWithType: University.Id
  fullName: Warbler.Models.University.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Warbler.Models.University.PlaceId*
  commentId: Overload:Warbler.Models.University.PlaceId
  isExternal: false
  name: PlaceId
  nameWithType: University.PlaceId
  fullName: Warbler.Models.University.PlaceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Warbler.Models.University.Address*
  commentId: Overload:Warbler.Models.University.Address
  isExternal: false
  name: Address
  nameWithType: University.Address
  fullName: Warbler.Models.University.Address
- uid: Warbler.Models.University.Name*
  commentId: Overload:Warbler.Models.University.Name
  isExternal: false
  name: Name
  nameWithType: University.Name
  fullName: Warbler.Models.University.Name
- uid: Warbler.Models.University.Lat*
  commentId: Overload:Warbler.Models.University.Lat
  isExternal: false
  name: Lat
  nameWithType: University.Lat
  fullName: Warbler.Models.University.Lat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Warbler.Models.University.Lng*
  commentId: Overload:Warbler.Models.University.Lng
  isExternal: false
  name: Lng
  nameWithType: University.Lng
  fullName: Warbler.Models.University.Lng
- uid: Warbler.Models.University.Server*
  commentId: Overload:Warbler.Models.University.Server
  isExternal: false
  name: Server
  nameWithType: University.Server
  fullName: Warbler.Models.University.Server
- uid: Warbler.Models.Server
  commentId: T:Warbler.Models.Server
  parent: Warbler.Models
  isExternal: false
  name: Server
  nameWithType: Server
  fullName: Warbler.Models.Server
- uid: Warbler.Models.University.ClaimedBy*
  commentId: Overload:Warbler.Models.University.ClaimedBy
  isExternal: false
  name: ClaimedBy
  nameWithType: University.ClaimedBy
  fullName: Warbler.Models.University.ClaimedBy
- uid: Warbler.Models.User
  commentId: T:Warbler.Models.User
  parent: Warbler.Models
  isExternal: false
  name: User
  nameWithType: User
  fullName: Warbler.Models.User
- uid: Warbler.Models.University.ClaimedById*
  commentId: Overload:Warbler.Models.University.ClaimedById
  isExternal: false
  name: ClaimedById
  nameWithType: University.ClaimedById
  fullName: Warbler.Models.University.ClaimedById
- uid: Warbler.Models.University.Equals*
  commentId: Overload:Warbler.Models.University.Equals
  isExternal: false
  name: Equals
  nameWithType: University.Equals
  fullName: Warbler.Models.University.Equals
- uid: System.IEquatable{Warbler.Models.University}.Equals(Warbler.Models.University)
  commentId: M:System.IEquatable{Warbler.Models.University}.Equals(Warbler.Models.University)
  parent: System.IEquatable{Warbler.Models.University}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(University)
  nameWithType: IEquatable<University>.Equals(University)
  fullName: System.IEquatable<Warbler.Models.University>.Equals(Warbler.Models.University)
  nameWithType.vb: IEquatable(Of University).Equals(University)
  fullName.vb: System.IEquatable(Of Warbler.Models.University).Equals(Warbler.Models.University)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<University>.Equals
    fullName: System.IEquatable<Warbler.Models.University>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.University
    name: University
    nameWithType: University
    fullName: Warbler.Models.University
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of University).Equals
    fullName: System.IEquatable(Of Warbler.Models.University).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.University
    name: University
    nameWithType: University
    fullName: Warbler.Models.University
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.University
  commentId: T:Warbler.Models.University
  parent: Warbler.Models
  isExternal: false
  name: University
  nameWithType: University
  fullName: Warbler.Models.University
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.University.GetHashCode*
  commentId: Overload:Warbler.Models.University.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: University.GetHashCode
  fullName: Warbler.Models.University.GetHashCode
- uid: Warbler.Models.University.op_Equality*
  commentId: Overload:Warbler.Models.University.op_Equality
  isExternal: false
  name: Equality
  nameWithType: University.Equality
  fullName: Warbler.Models.University.Equality
- uid: Warbler.Models.University.op_Inequality*
  commentId: Overload:Warbler.Models.University.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: University.Inequality
  fullName: Warbler.Models.University.Inequality
