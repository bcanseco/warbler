### YamlMime:ManagedReference
items:
- uid: Warbler.Models.User
  commentId: T:Warbler.Models.User
  id: User
  parent: Warbler.Models
  children:
  - Warbler.Models.User.AvatarId
  - Warbler.Models.User.Channels
  - Warbler.Models.User.Equals(System.Object)
  - Warbler.Models.User.Equals(Warbler.Models.User)
  - Warbler.Models.User.Flag
  - Warbler.Models.User.GetHashCode
  - Warbler.Models.User.IsOnline
  - Warbler.Models.User.Memberships
  - Warbler.Models.User.op_Equality(Warbler.Models.User,Warbler.Models.User)
  - Warbler.Models.User.op_Inequality(Warbler.Models.User,Warbler.Models.User)
  - Warbler.Models.User.UserName
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: Warbler.Models.User
  type: Class
  source:
    id: User
    path: ''
    startLine: 2425
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: 'public class User : IdentityUser, IEquatable<User>'
    content.vb: >-
      Public Class User
          Inherits IdentityUser
          Implements IEquatable(Of User)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Warbler.Models.User}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Models.User.UserName
  commentId: P:Warbler.Models.User.UserName
  id: UserName
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: User.UserName
  fullName: Warbler.Models.User.UserName
  type: Property
  source:
    id: UserName
    path: ''
    startLine: 2432
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  remarks: "\nOverriden to explicitly show in JSON.NET serialization.\n"
  example: []
  syntax:
    content: public override string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property UserName As String
  overload: Warbler.Models.User.UserName*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Warbler.Models.User.AvatarId
  commentId: P:Warbler.Models.User.AvatarId
  id: AvatarId
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: AvatarId
  nameWithType: User.AvatarId
  fullName: Warbler.Models.User.AvatarId
  type: Property
  source:
    id: AvatarId
    path: ''
    startLine: 2439
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public int AvatarId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AvatarId As Integer
  overload: Warbler.Models.User.AvatarId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.User.Flag
  commentId: P:Warbler.Models.User.Flag
  id: Flag
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Flag
  nameWithType: User.Flag
  fullName: Warbler.Models.User.Flag
  type: Property
  source:
    id: Flag
    path: ''
    startLine: 2441
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public UserFlag Flag { get; set; }
    parameters: []
    return:
      type: UserFlag
    content.vb: Public Property Flag As UserFlag
  overload: Warbler.Models.User.Flag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.User.Memberships
  commentId: P:Warbler.Models.User.Memberships
  id: Memberships
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Memberships
  nameWithType: User.Memberships
  fullName: Warbler.Models.User.Memberships
  type: Property
  source:
    id: Memberships
    path: ''
    startLine: 2444
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public ICollection<Membership> Memberships { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Warbler.Models.Membership}
    content.vb: Public Property Memberships As ICollection(Of Membership)
  overload: Warbler.Models.User.Memberships*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.User.IsOnline
  commentId: P:Warbler.Models.User.IsOnline
  id: IsOnline
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: IsOnline
  nameWithType: User.IsOnline
  fullName: Warbler.Models.User.IsOnline
  type: Property
  source:
    id: IsOnline
    path: ''
    startLine: 2446
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public bool IsOnline { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOnline As Boolean
  overload: Warbler.Models.User.IsOnline*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Warbler.Models.User.Channels
  commentId: P:Warbler.Models.User.Channels
  id: Channels
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Channels
  nameWithType: User.Channels
  fullName: Warbler.Models.User.Channels
  type: Property
  source:
    id: Channels
    path: ''
    startLine: 2449
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public IEnumerable<Channel> Channels { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Warbler.Models.Channel}
    content.vb: Public ReadOnly Property Channels As IEnumerable(Of Channel)
  overload: Warbler.Models.User.Channels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Warbler.Models.User.Equals(Warbler.Models.User)
  commentId: M:Warbler.Models.User.Equals(Warbler.Models.User)
  id: Equals(Warbler.Models.User)
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Equals(User)
  nameWithType: User.Equals(User)
  fullName: Warbler.Models.User.Equals(Warbler.Models.User)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2452
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public bool Equals(User other)
    parameters:
    - id: other
      type: Warbler.Models.User
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As User) As Boolean
  overload: Warbler.Models.User.Equals*
  implements:
  - System.IEquatable{Warbler.Models.User}.Equals(Warbler.Models.User)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Models.User.Equals(System.Object)
  commentId: M:Warbler.Models.User.Equals(System.Object)
  id: Equals(System.Object)
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: User.Equals(Object)
  fullName: Warbler.Models.User.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2454
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: Warbler.Models.User.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Warbler.Models.User.GetHashCode
  commentId: M:Warbler.Models.User.GetHashCode
  id: GetHashCode
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: User.GetHashCode()
  fullName: Warbler.Models.User.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 2461
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Warbler.Models.User.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Warbler.Models.User.op_Equality(Warbler.Models.User,Warbler.Models.User)
  commentId: M:Warbler.Models.User.op_Equality(Warbler.Models.User,Warbler.Models.User)
  id: op_Equality(Warbler.Models.User,Warbler.Models.User)
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Equality(User, User)
  nameWithType: User.Equality(User, User)
  fullName: Warbler.Models.User.Equality(Warbler.Models.User, Warbler.Models.User)
  type: Operator
  source:
    id: op_Equality
    path: ''
    startLine: 2463
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public static bool operator ==(User left, User right)
    parameters:
    - id: left
      type: Warbler.Models.User
    - id: right
      type: Warbler.Models.User
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As User, right As User) As Boolean
  overload: Warbler.Models.User.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Warbler.Models.User.op_Inequality(Warbler.Models.User,Warbler.Models.User)
  commentId: M:Warbler.Models.User.op_Inequality(Warbler.Models.User,Warbler.Models.User)
  id: op_Inequality(Warbler.Models.User,Warbler.Models.User)
  parent: Warbler.Models.User
  langs:
  - csharp
  - vb
  name: Inequality(User, User)
  nameWithType: User.Inequality(User, User)
  fullName: Warbler.Models.User.Inequality(Warbler.Models.User, Warbler.Models.User)
  type: Operator
  source:
    id: op_Inequality
    path: ''
    startLine: 2464
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Models
  syntax:
    content: public static bool operator !=(User left, User right)
    parameters:
    - id: left
      type: Warbler.Models.User
    - id: right
      type: Warbler.Models.User
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As User, right As User) As Boolean
  overload: Warbler.Models.User.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Warbler.Models
  commentId: N:Warbler.Models
  isExternal: false
  name: Warbler.Models
  nameWithType: Warbler.Models
  fullName: Warbler.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Warbler.Models.User}
  commentId: T:System.IEquatable{Warbler.Models.User}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<User>
  nameWithType: IEquatable<User>
  fullName: System.IEquatable<Warbler.Models.User>
  nameWithType.vb: IEquatable(Of User)
  fullName.vb: System.IEquatable(Of Warbler.Models.User)
  name.vb: IEquatable(Of User)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.User.UserName*
  commentId: Overload:Warbler.Models.User.UserName
  isExternal: false
  name: UserName
  nameWithType: User.UserName
  fullName: Warbler.Models.User.UserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Warbler.Models.User.AvatarId*
  commentId: Overload:Warbler.Models.User.AvatarId
  isExternal: false
  name: AvatarId
  nameWithType: User.AvatarId
  fullName: Warbler.Models.User.AvatarId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Warbler.Models.User.Flag*
  commentId: Overload:Warbler.Models.User.Flag
  isExternal: false
  name: Flag
  nameWithType: User.Flag
  fullName: Warbler.Models.User.Flag
- uid: UserFlag
  commentId: '!:UserFlag'
  isExternal: true
  name: UserFlag
  nameWithType: UserFlag
  fullName: UserFlag
- uid: Warbler.Models.User.Memberships*
  commentId: Overload:Warbler.Models.User.Memberships
  isExternal: false
  name: Memberships
  nameWithType: User.Memberships
  fullName: Warbler.Models.User.Memberships
- uid: System.Collections.Generic.ICollection{Warbler.Models.Membership}
  commentId: T:System.Collections.Generic.ICollection{Warbler.Models.Membership}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Membership>
  nameWithType: ICollection<Membership>
  fullName: System.Collections.Generic.ICollection<Warbler.Models.Membership>
  nameWithType.vb: ICollection(Of Membership)
  fullName.vb: System.Collections.Generic.ICollection(Of Warbler.Models.Membership)
  name.vb: ICollection(Of Membership)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Models.Membership
    name: Membership
    nameWithType: Membership
    fullName: Warbler.Models.Membership
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Models.Membership
    name: Membership
    nameWithType: Membership
    fullName: Warbler.Models.Membership
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Warbler.Models.User.IsOnline*
  commentId: Overload:Warbler.Models.User.IsOnline
  isExternal: false
  name: IsOnline
  nameWithType: User.IsOnline
  fullName: Warbler.Models.User.IsOnline
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Warbler.Models.User.Channels*
  commentId: Overload:Warbler.Models.User.Channels
  isExternal: false
  name: Channels
  nameWithType: User.Channels
  fullName: Warbler.Models.User.Channels
- uid: System.Collections.Generic.IEnumerable{Warbler.Models.Channel}
  commentId: T:System.Collections.Generic.IEnumerable{Warbler.Models.Channel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Channel>
  nameWithType: IEnumerable<Channel>
  fullName: System.Collections.Generic.IEnumerable<Warbler.Models.Channel>
  nameWithType.vb: IEnumerable(Of Channel)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Warbler.Models.Channel)
  name.vb: IEnumerable(Of Channel)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Models.Channel
    name: Channel
    nameWithType: Channel
    fullName: Warbler.Models.Channel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Models.Channel
    name: Channel
    nameWithType: Channel
    fullName: Warbler.Models.Channel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.User.Equals*
  commentId: Overload:Warbler.Models.User.Equals
  isExternal: false
  name: Equals
  nameWithType: User.Equals
  fullName: Warbler.Models.User.Equals
- uid: System.IEquatable{Warbler.Models.User}.Equals(Warbler.Models.User)
  commentId: M:System.IEquatable{Warbler.Models.User}.Equals(Warbler.Models.User)
  parent: System.IEquatable{Warbler.Models.User}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(User)
  nameWithType: IEquatable<User>.Equals(User)
  fullName: System.IEquatable<Warbler.Models.User>.Equals(Warbler.Models.User)
  nameWithType.vb: IEquatable(Of User).Equals(User)
  fullName.vb: System.IEquatable(Of Warbler.Models.User).Equals(Warbler.Models.User)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<User>.Equals
    fullName: System.IEquatable<Warbler.Models.User>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of User).Equals
    fullName: System.IEquatable(Of Warbler.Models.User).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.User
  commentId: T:Warbler.Models.User
  parent: Warbler.Models
  isExternal: false
  name: User
  nameWithType: User
  fullName: Warbler.Models.User
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Models.User.GetHashCode*
  commentId: Overload:Warbler.Models.User.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: User.GetHashCode
  fullName: Warbler.Models.User.GetHashCode
- uid: Warbler.Models.User.op_Equality*
  commentId: Overload:Warbler.Models.User.op_Equality
  isExternal: false
  name: Equality
  nameWithType: User.Equality
  fullName: Warbler.Models.User.Equality
- uid: Warbler.Models.User.op_Inequality*
  commentId: Overload:Warbler.Models.User.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: User.Inequality
  fullName: Warbler.Models.User.Inequality
