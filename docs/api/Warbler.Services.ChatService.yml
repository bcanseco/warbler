### YamlMime:ManagedReference
items:
- uid: Warbler.Services.ChatService
  commentId: T:Warbler.Services.ChatService
  id: ChatService
  parent: Warbler.Services
  children:
  - Warbler.Services.ChatService.#ctor(IHubContext{Warbler.Hubs.ChatHub},ILogger{Warbler.Services.ChatService})
  - Warbler.Services.ChatService.OnConnectedAsync(Warbler.Models.User,System.String)
  - Warbler.Services.ChatService.OnDisconnectedAsync(Warbler.Models.User,System.String)
  - Warbler.Services.ChatService.With(Warbler.Misc.WarblerDbContext)
  langs:
  - csharp
  - vb
  name: ChatService
  nameWithType: ChatService
  fullName: Warbler.Services.ChatService
  type: Class
  source:
    id: ChatService
    path: ''
    startLine: 2673
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nUsed by the <xref href=\"Warbler.Hubs.ChatHub\" data-throw-if-not-resolved=\"false\"></xref> for business logic.\n"
  example: []
  syntax:
    content: 'public class ChatService : HubResource<ChatHub>'
    content.vb: >-
      Public Class ChatService
          Inherits HubResource(Of ChatHub)
  inheritance:
  - System.Object
  - Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}
  inheritedMembers:
  - Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}.HubContext
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Services.ChatService.#ctor(IHubContext{Warbler.Hubs.ChatHub},ILogger{Warbler.Services.ChatService})
  commentId: M:Warbler.Services.ChatService.#ctor(IHubContext{Warbler.Hubs.ChatHub},ILogger{Warbler.Services.ChatService})
  id: '#ctor(IHubContext{Warbler.Hubs.ChatHub},ILogger{Warbler.Services.ChatService})'
  parent: Warbler.Services.ChatService
  langs:
  - csharp
  - vb
  name: ChatService(IHubContext<ChatHub>, ILogger<ChatService>)
  nameWithType: ChatService.ChatService(IHubContext<ChatHub>, ILogger<ChatService>)
  fullName: Warbler.Services.ChatService.ChatService(IHubContext<Warbler.Hubs.ChatHub>, ILogger<Warbler.Services.ChatService>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2675
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  syntax:
    content: public ChatService(IHubContext<ChatHub> hubContext, ILogger<ChatService> logger)
    parameters:
    - id: hubContext
      type: IHubContext{Warbler.Hubs.ChatHub}
    - id: logger
      type: ILogger{Warbler.Services.ChatService}
    content.vb: Public Sub New(hubContext As IHubContext(Of ChatHub), logger As ILogger(Of ChatService))
  overload: Warbler.Services.ChatService.#ctor*
  nameWithType.vb: ChatService.ChatService(IHubContext(Of ChatHub), ILogger(Of ChatService))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Warbler.Services.ChatService.ChatService(IHubContext(Of Warbler.Hubs.ChatHub), ILogger(Of Warbler.Services.ChatService))
  name.vb: ChatService(IHubContext(Of ChatHub), ILogger(Of ChatService))
- uid: Warbler.Services.ChatService.With(Warbler.Misc.WarblerDbContext)
  commentId: M:Warbler.Services.ChatService.With(Warbler.Misc.WarblerDbContext)
  id: With(Warbler.Misc.WarblerDbContext)
  parent: Warbler.Services.ChatService
  langs:
  - csharp
  - vb
  name: With(WarblerDbContext)
  nameWithType: ChatService.With(WarblerDbContext)
  fullName: Warbler.Services.ChatService.With(Warbler.Misc.WarblerDbContext)
  type: Method
  source:
    id: With
    path: ''
    startLine: 2687
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  syntax:
    content: public ChatService With(WarblerDbContext context)
    parameters:
    - id: context
      type: Warbler.Misc.WarblerDbContext
    return:
      type: Warbler.Services.ChatService
    content.vb: Public Function With(context As WarblerDbContext) As ChatService
  overload: Warbler.Services.ChatService.With*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Services.ChatService.OnConnectedAsync(Warbler.Models.User,System.String)
  commentId: M:Warbler.Services.ChatService.OnConnectedAsync(Warbler.Models.User,System.String)
  id: OnConnectedAsync(Warbler.Models.User,System.String)
  parent: Warbler.Services.ChatService
  langs:
  - csharp
  - vb
  name: OnConnectedAsync(User, String)
  nameWithType: ChatService.OnConnectedAsync(User, String)
  fullName: Warbler.Services.ChatService.OnConnectedAsync(Warbler.Models.User, System.String)
  type: Method
  source:
    id: OnConnectedAsync
    path: ''
    startLine: 2699
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nInvoked from the hub on each connected client.\n"
  example: []
  syntax:
    content: public Task OnConnectedAsync(User user, string connectionId)
    parameters:
    - id: user
      type: Warbler.Models.User
    - id: connectionId
      type: System.String
    return:
      type: Task
    content.vb: Public Function OnConnectedAsync(user As User, connectionId As String) As Task
  overload: Warbler.Services.ChatService.OnConnectedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Services.ChatService.OnDisconnectedAsync(Warbler.Models.User,System.String)
  commentId: M:Warbler.Services.ChatService.OnDisconnectedAsync(Warbler.Models.User,System.String)
  id: OnDisconnectedAsync(Warbler.Models.User,System.String)
  parent: Warbler.Services.ChatService
  langs:
  - csharp
  - vb
  name: OnDisconnectedAsync(User, String)
  nameWithType: ChatService.OnDisconnectedAsync(User, String)
  fullName: Warbler.Services.ChatService.OnDisconnectedAsync(Warbler.Models.User, System.String)
  type: Method
  source:
    id: OnDisconnectedAsync
    path: ''
    startLine: 2750
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nInvoked from the hub on each disconnected client.\n"
  remarks: "\nWe don't have to remove the connection ID from its \nHubContext group because SignalR does this automatically.\n"
  example: []
  syntax:
    content: public Task OnDisconnectedAsync(User user, string connectionId)
    parameters:
    - id: user
      type: Warbler.Models.User
    - id: connectionId
      type: System.String
    return:
      type: Task
    content.vb: Public Function OnDisconnectedAsync(user As User, connectionId As String) As Task
  overload: Warbler.Services.ChatService.OnDisconnectedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Warbler.Hubs.ChatHub
  commentId: T:Warbler.Hubs.ChatHub
  isExternal: false
  name: ChatHub
  nameWithType: ChatHub
  fullName: Warbler.Hubs.ChatHub
- uid: Warbler.Services
  commentId: N:Warbler.Services
  isExternal: false
  name: Warbler.Services
  nameWithType: Warbler.Services
  fullName: Warbler.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}
  commentId: T:Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}
  parent: Warbler.Misc
  definition: Warbler.Misc.HubResource`1
  name: HubResource<ChatHub>
  nameWithType: HubResource<ChatHub>
  fullName: Warbler.Misc.HubResource<Warbler.Hubs.ChatHub>
  nameWithType.vb: HubResource(Of ChatHub)
  fullName.vb: Warbler.Misc.HubResource(Of Warbler.Hubs.ChatHub)
  name.vb: HubResource(Of ChatHub)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Hubs.ChatHub
    name: ChatHub
    nameWithType: ChatHub
    fullName: Warbler.Hubs.ChatHub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Hubs.ChatHub
    name: ChatHub
    nameWithType: ChatHub
    fullName: Warbler.Hubs.ChatHub
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}.HubContext
  commentId: P:Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}.HubContext
  parent: Warbler.Misc.HubResource{Warbler.Hubs.ChatHub}
  definition: Warbler.Misc.HubResource`1.HubContext
  name: HubContext
  nameWithType: HubResource<ChatHub>.HubContext
  fullName: Warbler.Misc.HubResource<Warbler.Hubs.ChatHub>.HubContext
  nameWithType.vb: HubResource(Of ChatHub).HubContext
  fullName.vb: Warbler.Misc.HubResource(Of Warbler.Hubs.ChatHub).HubContext
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Misc.HubResource`1
  commentId: T:Warbler.Misc.HubResource`1
  isExternal: false
  name: HubResource<THub>
  nameWithType: HubResource<THub>
  fullName: Warbler.Misc.HubResource<THub>
  nameWithType.vb: HubResource(Of THub)
  fullName.vb: Warbler.Misc.HubResource(Of THub)
  name.vb: HubResource(Of THub)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: <
    nameWithType: <
    fullName: <
  - name: THub
    nameWithType: THub
    fullName: THub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: THub
    nameWithType: THub
    fullName: THub
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Misc
  commentId: N:Warbler.Misc
  isExternal: false
  name: Warbler.Misc
  nameWithType: Warbler.Misc
  fullName: Warbler.Misc
- uid: Warbler.Misc.HubResource`1.HubContext
  commentId: P:Warbler.Misc.HubResource`1.HubContext
  isExternal: false
  name: HubContext
  nameWithType: HubResource<THub>.HubContext
  fullName: Warbler.Misc.HubResource<THub>.HubContext
  nameWithType.vb: HubResource(Of THub).HubContext
  fullName.vb: Warbler.Misc.HubResource(Of THub).HubContext
- uid: Warbler.Services.ChatService.#ctor*
  commentId: Overload:Warbler.Services.ChatService.#ctor
  isExternal: false
  name: ChatService
  nameWithType: ChatService.ChatService
  fullName: Warbler.Services.ChatService.ChatService
- uid: IHubContext{Warbler.Hubs.ChatHub}
  commentId: '!:IHubContext{Warbler.Hubs.ChatHub}'
  definition: IHubContext`1
  name: IHubContext<ChatHub>
  nameWithType: IHubContext<ChatHub>
  fullName: IHubContext<Warbler.Hubs.ChatHub>
  nameWithType.vb: IHubContext(Of ChatHub)
  fullName.vb: IHubContext(Of Warbler.Hubs.ChatHub)
  name.vb: IHubContext(Of ChatHub)
  spec.csharp:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Hubs.ChatHub
    name: ChatHub
    nameWithType: ChatHub
    fullName: Warbler.Hubs.ChatHub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Hubs.ChatHub
    name: ChatHub
    nameWithType: ChatHub
    fullName: Warbler.Hubs.ChatHub
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Warbler.Services.ChatService}
  commentId: '!:ILogger{Warbler.Services.ChatService}'
  definition: ILogger`1
  name: ILogger<ChatService>
  nameWithType: ILogger<ChatService>
  fullName: ILogger<Warbler.Services.ChatService>
  nameWithType.vb: ILogger(Of ChatService)
  fullName.vb: ILogger(Of Warbler.Services.ChatService)
  name.vb: ILogger(Of ChatService)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Services.ChatService
    name: ChatService
    nameWithType: ChatService
    fullName: Warbler.Services.ChatService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Services.ChatService
    name: ChatService
    nameWithType: ChatService
    fullName: Warbler.Services.ChatService
  - name: )
    nameWithType: )
    fullName: )
- uid: IHubContext`1
  isExternal: true
  name: IHubContext<>
  nameWithType: IHubContext<>
  fullName: IHubContext<>
  nameWithType.vb: IHubContext(Of )
  fullName.vb: IHubContext(Of )
  name.vb: IHubContext(Of )
  spec.csharp:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Services.ChatService.With*
  commentId: Overload:Warbler.Services.ChatService.With
  isExternal: false
  name: With
  nameWithType: ChatService.With
  fullName: Warbler.Services.ChatService.With
- uid: Warbler.Misc.WarblerDbContext
  commentId: T:Warbler.Misc.WarblerDbContext
  parent: Warbler.Misc
  isExternal: false
  name: WarblerDbContext
  nameWithType: WarblerDbContext
  fullName: Warbler.Misc.WarblerDbContext
- uid: Warbler.Services.ChatService
  commentId: T:Warbler.Services.ChatService
  parent: Warbler.Services
  isExternal: false
  name: ChatService
  nameWithType: ChatService
  fullName: Warbler.Services.ChatService
- uid: Warbler.Services.ChatService.OnConnectedAsync*
  commentId: Overload:Warbler.Services.ChatService.OnConnectedAsync
  isExternal: false
  name: OnConnectedAsync
  nameWithType: ChatService.OnConnectedAsync
  fullName: Warbler.Services.ChatService.OnConnectedAsync
- uid: Warbler.Models.User
  commentId: T:Warbler.Models.User
  parent: Warbler.Models
  isExternal: false
  name: User
  nameWithType: User
  fullName: Warbler.Models.User
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Warbler.Models
  commentId: N:Warbler.Models
  isExternal: false
  name: Warbler.Models
  nameWithType: Warbler.Models
  fullName: Warbler.Models
- uid: Warbler.Services.ChatService.OnDisconnectedAsync*
  commentId: Overload:Warbler.Services.ChatService.OnDisconnectedAsync
  isExternal: false
  name: OnDisconnectedAsync
  nameWithType: ChatService.OnDisconnectedAsync
  fullName: Warbler.Services.ChatService.OnDisconnectedAsync
