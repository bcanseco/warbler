### YamlMime:ManagedReference
items:
- uid: Warbler.Services.ProximityService
  commentId: T:Warbler.Services.ProximityService
  id: ProximityService
  parent: Warbler.Services
  children:
  - Warbler.Services.ProximityService.#ctor(IHubContext{Warbler.Hubs.ProximityHub},IOptions{Warbler.Misc.ApiKeys},ILogger{Warbler.Services.ProximityService})
  - Warbler.Services.ProximityService.OnDisconnectedAsync(System.String)
  - Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User,System.String,Location)
  - Warbler.Services.ProximityService.SelectUniversityAsync(Warbler.Models.User,System.String,System.String)
  - Warbler.Services.ProximityService.With(Warbler.Misc.WarblerDbContext)
  langs:
  - csharp
  - vb
  name: ProximityService
  nameWithType: ProximityService
  fullName: Warbler.Services.ProximityService
  type: Class
  source:
    id: ProximityService
    path: ''
    startLine: 2877
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nUsed by the <xref href=\"Warbler.Hubs.ProximityHub\" data-throw-if-not-resolved=\"false\"></xref> for business logic.\n"
  example: []
  syntax:
    content: 'public class ProximityService : HubResource<ProximityHub>'
    content.vb: >-
      Public Class ProximityService
          Inherits HubResource(Of ProximityHub)
  inheritance:
  - System.Object
  - Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}
  inheritedMembers:
  - Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.HubContext
  - Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.OnConnectedAsync(Warbler.Models.User,System.String)
  - Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.OnDisconnectedAsync(Warbler.Models.User,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Services.ProximityService.#ctor(IHubContext{Warbler.Hubs.ProximityHub},IOptions{Warbler.Misc.ApiKeys},ILogger{Warbler.Services.ProximityService})
  commentId: M:Warbler.Services.ProximityService.#ctor(IHubContext{Warbler.Hubs.ProximityHub},IOptions{Warbler.Misc.ApiKeys},ILogger{Warbler.Services.ProximityService})
  id: '#ctor(IHubContext{Warbler.Hubs.ProximityHub},IOptions{Warbler.Misc.ApiKeys},ILogger{Warbler.Services.ProximityService})'
  parent: Warbler.Services.ProximityService
  langs:
  - csharp
  - vb
  name: ProximityService(IHubContext<ProximityHub>, IOptions<ApiKeys>, ILogger<ProximityService>)
  nameWithType: ProximityService.ProximityService(IHubContext<ProximityHub>, IOptions<ApiKeys>, ILogger<ProximityService>)
  fullName: Warbler.Services.ProximityService.ProximityService(IHubContext<Warbler.Hubs.ProximityHub>, IOptions<Warbler.Misc.ApiKeys>, ILogger<Warbler.Services.ProximityService>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2884
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  syntax:
    content: public ProximityService(IHubContext<ProximityHub> hubContext, IOptions<ApiKeys> apiKeys, ILogger<ProximityService> logger)
    parameters:
    - id: hubContext
      type: IHubContext{Warbler.Hubs.ProximityHub}
    - id: apiKeys
      type: IOptions{Warbler.Misc.ApiKeys}
    - id: logger
      type: ILogger{Warbler.Services.ProximityService}
    content.vb: Public Sub New(hubContext As IHubContext(Of ProximityHub), apiKeys As IOptions(Of ApiKeys), logger As ILogger(Of ProximityService))
  overload: Warbler.Services.ProximityService.#ctor*
  nameWithType.vb: ProximityService.ProximityService(IHubContext(Of ProximityHub), IOptions(Of ApiKeys), ILogger(Of ProximityService))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Warbler.Services.ProximityService.ProximityService(IHubContext(Of Warbler.Hubs.ProximityHub), IOptions(Of Warbler.Misc.ApiKeys), ILogger(Of Warbler.Services.ProximityService))
  name.vb: ProximityService(IHubContext(Of ProximityHub), IOptions(Of ApiKeys), ILogger(Of ProximityService))
- uid: Warbler.Services.ProximityService.With(Warbler.Misc.WarblerDbContext)
  commentId: M:Warbler.Services.ProximityService.With(Warbler.Misc.WarblerDbContext)
  id: With(Warbler.Misc.WarblerDbContext)
  parent: Warbler.Services.ProximityService
  langs:
  - csharp
  - vb
  name: With(WarblerDbContext)
  nameWithType: ProximityService.With(WarblerDbContext)
  fullName: Warbler.Services.ProximityService.With(Warbler.Misc.WarblerDbContext)
  type: Method
  source:
    id: With
    path: ''
    startLine: 2901
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  syntax:
    content: public ProximityService With(WarblerDbContext context)
    parameters:
    - id: context
      type: Warbler.Misc.WarblerDbContext
    return:
      type: Warbler.Services.ProximityService
    content.vb: Public Function With(context As WarblerDbContext) As ProximityService
  overload: Warbler.Services.ProximityService.With*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Services.ProximityService.OnDisconnectedAsync(System.String)
  commentId: M:Warbler.Services.ProximityService.OnDisconnectedAsync(System.String)
  id: OnDisconnectedAsync(System.String)
  parent: Warbler.Services.ProximityService
  langs:
  - csharp
  - vb
  name: OnDisconnectedAsync(String)
  nameWithType: ProximityService.OnDisconnectedAsync(String)
  fullName: Warbler.Services.ProximityService.OnDisconnectedAsync(System.String)
  type: Method
  source:
    id: OnDisconnectedAsync
    path: ''
    startLine: 2911
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nInvoked from the hub on each disconnected client. Removes the\nclient's choice list from <xref href=\"Warbler.Services.ProximityService.UserChoices\" data-throw-if-not-resolved=\"false\"></xref> if it exists.\n"
  example: []
  syntax:
    content: public Task OnDisconnectedAsync(string userName)
    parameters:
    - id: userName
      type: System.String
    return:
      type: Task
    content.vb: Public Function OnDisconnectedAsync(userName As String) As Task
  overload: Warbler.Services.ProximityService.OnDisconnectedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User,System.String,Location)
  commentId: M:Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User,System.String,Location)
  id: ProximitySearchAsync(Warbler.Models.User,System.String,Location)
  parent: Warbler.Services.ProximityService
  langs:
  - csharp
  - vb
  name: ProximitySearchAsync(User, String, Location)
  nameWithType: ProximityService.ProximitySearchAsync(User, String, Location)
  fullName: Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User, System.String, Location)
  type: Method
  source:
    id: ProximitySearchAsync
    path: ''
    startLine: 2924
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nConducts a proximity search and returns the filtered results.\n"
  example: []
  syntax:
    content: public Task ProximitySearchAsync(User user, string connectionId, Location coordinates)
    parameters:
    - id: user
      type: Warbler.Models.User
      description: The user to associate the results with.
    - id: connectionId
      type: System.String
      description: The connection ID of the user.
    - id: coordinates
      type: Location
      description: The location to search near.
    return:
      type: Task
    content.vb: Public Function ProximitySearchAsync(user As User, connectionId As String, coordinates As Location) As Task
  overload: Warbler.Services.ProximityService.ProximitySearchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Services.ProximityService.SelectUniversityAsync(Warbler.Models.User,System.String,System.String)
  commentId: M:Warbler.Services.ProximityService.SelectUniversityAsync(Warbler.Models.User,System.String,System.String)
  id: SelectUniversityAsync(Warbler.Models.User,System.String,System.String)
  parent: Warbler.Services.ProximityService
  langs:
  - csharp
  - vb
  name: SelectUniversityAsync(User, String, String)
  nameWithType: ProximityService.SelectUniversityAsync(User, String, String)
  fullName: Warbler.Services.ProximityService.SelectUniversityAsync(Warbler.Models.User, System.String, System.String)
  type: Method
  source:
    id: SelectUniversityAsync
    path: ''
    startLine: 2952
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Services
  summary: "\nValidates the user's university selection and lets them join if successful.\n"
  example: []
  syntax:
    content: public Task SelectUniversityAsync(User user, string connectionId, string placeId)
    parameters:
    - id: user
      type: Warbler.Models.User
      description: The user selecting a university.
    - id: connectionId
      type: System.String
      description: The user's connection ID.
    - id: placeId
      type: System.String
      description: The Google Place ID of the selected university.
    return:
      type: Task
    content.vb: Public Function SelectUniversityAsync(user As User, connectionId As String, placeId As String) As Task
  overload: Warbler.Services.ProximityService.SelectUniversityAsync*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "\nThrown if this method is called for a user before <xref href=\"Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User%2cSystem.String%2cLocation)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Warbler.Hubs.ProximityHub
  commentId: T:Warbler.Hubs.ProximityHub
  isExternal: false
  name: ProximityHub
  nameWithType: ProximityHub
  fullName: Warbler.Hubs.ProximityHub
- uid: Warbler.Services
  commentId: N:Warbler.Services
  isExternal: false
  name: Warbler.Services
  nameWithType: Warbler.Services
  fullName: Warbler.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}
  commentId: T:Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}
  parent: Warbler.Misc
  definition: Warbler.Misc.HubResource`1
  name: HubResource<ProximityHub>
  nameWithType: HubResource<ProximityHub>
  fullName: Warbler.Misc.HubResource<Warbler.Hubs.ProximityHub>
  nameWithType.vb: HubResource(Of ProximityHub)
  fullName.vb: Warbler.Misc.HubResource(Of Warbler.Hubs.ProximityHub)
  name.vb: HubResource(Of ProximityHub)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Hubs.ProximityHub
    name: ProximityHub
    nameWithType: ProximityHub
    fullName: Warbler.Hubs.ProximityHub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Hubs.ProximityHub
    name: ProximityHub
    nameWithType: ProximityHub
    fullName: Warbler.Hubs.ProximityHub
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.HubContext
  commentId: P:Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.HubContext
  parent: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}
  definition: Warbler.Misc.HubResource`1.HubContext
  name: HubContext
  nameWithType: HubResource<ProximityHub>.HubContext
  fullName: Warbler.Misc.HubResource<Warbler.Hubs.ProximityHub>.HubContext
  nameWithType.vb: HubResource(Of ProximityHub).HubContext
  fullName.vb: Warbler.Misc.HubResource(Of Warbler.Hubs.ProximityHub).HubContext
- uid: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.OnConnectedAsync(Warbler.Models.User,System.String)
  commentId: M:Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.OnConnectedAsync(Warbler.Models.User,System.String)
  parent: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}
  definition: Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
  name: OnConnectedAsync(User, String)
  nameWithType: HubResource<ProximityHub>.OnConnectedAsync(User, String)
  fullName: Warbler.Misc.HubResource<Warbler.Hubs.ProximityHub>.OnConnectedAsync(Warbler.Models.User, System.String)
  nameWithType.vb: HubResource(Of ProximityHub).OnConnectedAsync(User, String)
  fullName.vb: Warbler.Misc.HubResource(Of Warbler.Hubs.ProximityHub).OnConnectedAsync(Warbler.Models.User, System.String)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
    name: OnConnectedAsync
    nameWithType: HubResource<ProximityHub>.OnConnectedAsync
    fullName: Warbler.Misc.HubResource<Warbler.Hubs.ProximityHub>.OnConnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
    name: OnConnectedAsync
    nameWithType: HubResource(Of ProximityHub).OnConnectedAsync
    fullName: Warbler.Misc.HubResource(Of Warbler.Hubs.ProximityHub).OnConnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.OnDisconnectedAsync(Warbler.Models.User,System.String)
  commentId: M:Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}.OnDisconnectedAsync(Warbler.Models.User,System.String)
  parent: Warbler.Misc.HubResource{Warbler.Hubs.ProximityHub}
  definition: Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
  name: OnDisconnectedAsync(User, String)
  nameWithType: HubResource<ProximityHub>.OnDisconnectedAsync(User, String)
  fullName: Warbler.Misc.HubResource<Warbler.Hubs.ProximityHub>.OnDisconnectedAsync(Warbler.Models.User, System.String)
  nameWithType.vb: HubResource(Of ProximityHub).OnDisconnectedAsync(User, String)
  fullName.vb: Warbler.Misc.HubResource(Of Warbler.Hubs.ProximityHub).OnDisconnectedAsync(Warbler.Models.User, System.String)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
    name: OnDisconnectedAsync
    nameWithType: HubResource<ProximityHub>.OnDisconnectedAsync
    fullName: Warbler.Misc.HubResource<Warbler.Hubs.ProximityHub>.OnDisconnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
    name: OnDisconnectedAsync
    nameWithType: HubResource(Of ProximityHub).OnDisconnectedAsync
    fullName: Warbler.Misc.HubResource(Of Warbler.Hubs.ProximityHub).OnDisconnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Misc.HubResource`1
  commentId: T:Warbler.Misc.HubResource`1
  isExternal: false
  name: HubResource<THub>
  nameWithType: HubResource<THub>
  fullName: Warbler.Misc.HubResource<THub>
  nameWithType.vb: HubResource(Of THub)
  fullName.vb: Warbler.Misc.HubResource(Of THub)
  name.vb: HubResource(Of THub)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: <
    nameWithType: <
    fullName: <
  - name: THub
    nameWithType: THub
    fullName: THub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Warbler.Misc.HubResource`1
    name: HubResource
    nameWithType: HubResource
    fullName: Warbler.Misc.HubResource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: THub
    nameWithType: THub
    fullName: THub
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Misc
  commentId: N:Warbler.Misc
  isExternal: false
  name: Warbler.Misc
  nameWithType: Warbler.Misc
  fullName: Warbler.Misc
- uid: Warbler.Misc.HubResource`1.HubContext
  commentId: P:Warbler.Misc.HubResource`1.HubContext
  isExternal: false
  name: HubContext
  nameWithType: HubResource<THub>.HubContext
  fullName: Warbler.Misc.HubResource<THub>.HubContext
  nameWithType.vb: HubResource(Of THub).HubContext
  fullName.vb: Warbler.Misc.HubResource(Of THub).HubContext
- uid: Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
  commentId: M:Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
  isExternal: true
  name: OnConnectedAsync(User, String)
  nameWithType: HubResource<THub>.OnConnectedAsync(User, String)
  fullName: Warbler.Misc.HubResource<THub>.OnConnectedAsync(Warbler.Models.User, System.String)
  nameWithType.vb: HubResource(Of THub).OnConnectedAsync(User, String)
  fullName.vb: Warbler.Misc.HubResource(Of THub).OnConnectedAsync(Warbler.Models.User, System.String)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
    name: OnConnectedAsync
    nameWithType: HubResource<THub>.OnConnectedAsync
    fullName: Warbler.Misc.HubResource<THub>.OnConnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Warbler.Misc.HubResource`1.OnConnectedAsync(Warbler.Models.User,System.String)
    name: OnConnectedAsync
    nameWithType: HubResource(Of THub).OnConnectedAsync
    fullName: Warbler.Misc.HubResource(Of THub).OnConnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
  commentId: M:Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
  isExternal: true
  name: OnDisconnectedAsync(User, String)
  nameWithType: HubResource<THub>.OnDisconnectedAsync(User, String)
  fullName: Warbler.Misc.HubResource<THub>.OnDisconnectedAsync(Warbler.Models.User, System.String)
  nameWithType.vb: HubResource(Of THub).OnDisconnectedAsync(User, String)
  fullName.vb: Warbler.Misc.HubResource(Of THub).OnDisconnectedAsync(Warbler.Models.User, System.String)
  spec.csharp:
  - uid: Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
    name: OnDisconnectedAsync
    nameWithType: HubResource<THub>.OnDisconnectedAsync
    fullName: Warbler.Misc.HubResource<THub>.OnDisconnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Warbler.Misc.HubResource`1.OnDisconnectedAsync(Warbler.Models.User,System.String)
    name: OnDisconnectedAsync
    nameWithType: HubResource(Of THub).OnDisconnectedAsync
    fullName: Warbler.Misc.HubResource(Of THub).OnDisconnectedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Warbler.Models.User
    name: User
    nameWithType: User
    fullName: Warbler.Models.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Services.ProximityService.#ctor*
  commentId: Overload:Warbler.Services.ProximityService.#ctor
  isExternal: false
  name: ProximityService
  nameWithType: ProximityService.ProximityService
  fullName: Warbler.Services.ProximityService.ProximityService
- uid: IHubContext{Warbler.Hubs.ProximityHub}
  commentId: '!:IHubContext{Warbler.Hubs.ProximityHub}'
  definition: IHubContext`1
  name: IHubContext<ProximityHub>
  nameWithType: IHubContext<ProximityHub>
  fullName: IHubContext<Warbler.Hubs.ProximityHub>
  nameWithType.vb: IHubContext(Of ProximityHub)
  fullName.vb: IHubContext(Of Warbler.Hubs.ProximityHub)
  name.vb: IHubContext(Of ProximityHub)
  spec.csharp:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Hubs.ProximityHub
    name: ProximityHub
    nameWithType: ProximityHub
    fullName: Warbler.Hubs.ProximityHub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Hubs.ProximityHub
    name: ProximityHub
    nameWithType: ProximityHub
    fullName: Warbler.Hubs.ProximityHub
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions{Warbler.Misc.ApiKeys}
  commentId: '!:IOptions{Warbler.Misc.ApiKeys}'
  definition: IOptions`1
  name: IOptions<ApiKeys>
  nameWithType: IOptions<ApiKeys>
  fullName: IOptions<Warbler.Misc.ApiKeys>
  nameWithType.vb: IOptions(Of ApiKeys)
  fullName.vb: IOptions(Of Warbler.Misc.ApiKeys)
  name.vb: IOptions(Of ApiKeys)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Misc.ApiKeys
    name: ApiKeys
    nameWithType: ApiKeys
    fullName: Warbler.Misc.ApiKeys
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Misc.ApiKeys
    name: ApiKeys
    nameWithType: ApiKeys
    fullName: Warbler.Misc.ApiKeys
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Warbler.Services.ProximityService}
  commentId: '!:ILogger{Warbler.Services.ProximityService}'
  definition: ILogger`1
  name: ILogger<ProximityService>
  nameWithType: ILogger<ProximityService>
  fullName: ILogger<Warbler.Services.ProximityService>
  nameWithType.vb: ILogger(Of ProximityService)
  fullName.vb: ILogger(Of Warbler.Services.ProximityService)
  name.vb: ILogger(Of ProximityService)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Warbler.Services.ProximityService
    name: ProximityService
    nameWithType: ProximityService
    fullName: Warbler.Services.ProximityService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Warbler.Services.ProximityService
    name: ProximityService
    nameWithType: ProximityService
    fullName: Warbler.Services.ProximityService
  - name: )
    nameWithType: )
    fullName: )
- uid: IHubContext`1
  isExternal: true
  name: IHubContext<>
  nameWithType: IHubContext<>
  fullName: IHubContext<>
  nameWithType.vb: IHubContext(Of )
  fullName.vb: IHubContext(Of )
  name.vb: IHubContext(Of )
  spec.csharp:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  commentId: '!:IOptions`1'
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Warbler.Services.ProximityService.With*
  commentId: Overload:Warbler.Services.ProximityService.With
  isExternal: false
  name: With
  nameWithType: ProximityService.With
  fullName: Warbler.Services.ProximityService.With
- uid: Warbler.Misc.WarblerDbContext
  commentId: T:Warbler.Misc.WarblerDbContext
  parent: Warbler.Misc
  isExternal: false
  name: WarblerDbContext
  nameWithType: WarblerDbContext
  fullName: Warbler.Misc.WarblerDbContext
- uid: Warbler.Services.ProximityService
  commentId: T:Warbler.Services.ProximityService
  parent: Warbler.Services
  isExternal: false
  name: ProximityService
  nameWithType: ProximityService
  fullName: Warbler.Services.ProximityService
- uid: Warbler.Services.ProximityService.UserChoices
  commentId: P:Warbler.Services.ProximityService.UserChoices
- uid: Warbler.Services.ProximityService.OnDisconnectedAsync*
  commentId: Overload:Warbler.Services.ProximityService.OnDisconnectedAsync
  isExternal: false
  name: OnDisconnectedAsync
  nameWithType: ProximityService.OnDisconnectedAsync
  fullName: Warbler.Services.ProximityService.OnDisconnectedAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Warbler.Services.ProximityService.ProximitySearchAsync*
  commentId: Overload:Warbler.Services.ProximityService.ProximitySearchAsync
  isExternal: false
  name: ProximitySearchAsync
  nameWithType: ProximityService.ProximitySearchAsync
  fullName: Warbler.Services.ProximityService.ProximitySearchAsync
- uid: Warbler.Models.User
  commentId: T:Warbler.Models.User
  parent: Warbler.Models
  isExternal: false
  name: User
  nameWithType: User
  fullName: Warbler.Models.User
- uid: Location
  commentId: '!:Location'
  isExternal: true
  name: Location
  nameWithType: Location
  fullName: Location
- uid: Warbler.Models
  commentId: N:Warbler.Models
  isExternal: false
  name: Warbler.Models
  nameWithType: Warbler.Models
  fullName: Warbler.Models
- uid: Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User,System.String,Location)
  commentId: M:Warbler.Services.ProximityService.ProximitySearchAsync(Warbler.Models.User,System.String,Location)
- uid: Warbler.Services.ProximityService.SelectUniversityAsync*
  commentId: Overload:Warbler.Services.ProximityService.SelectUniversityAsync
  isExternal: false
  name: SelectUniversityAsync
  nameWithType: ProximityService.SelectUniversityAsync
  fullName: Warbler.Services.ProximityService.SelectUniversityAsync
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
