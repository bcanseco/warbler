### YamlMime:ManagedReference
items:
- uid: Warbler.Startup
  commentId: T:Warbler.Startup
  id: Startup
  parent: Warbler
  children:
  - Warbler.Startup.#ctor(IHostingEnvironment)
  - Warbler.Startup.Configure(IApplicationBuilder,IHostingEnvironment,System.IServiceProvider)
  - Warbler.Startup.ConfigureServices(IServiceCollection)
  - Warbler.Startup.Main(System.String[])
  langs:
  - csharp
  - vb
  name: Startup
  nameWithType: Startup
  fullName: Warbler.Startup
  type: Class
  source:
    id: Startup
    path: ''
    startLine: 19
  assemblies:
  - cs.temp.dll
  namespace: Warbler
  syntax:
    content: public class Startup
    content.vb: Public Class Startup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Startup.#ctor(IHostingEnvironment)
  commentId: M:Warbler.Startup.#ctor(IHostingEnvironment)
  id: '#ctor(IHostingEnvironment)'
  parent: Warbler.Startup
  langs:
  - csharp
  - vb
  name: Startup(IHostingEnvironment)
  nameWithType: Startup.Startup(IHostingEnvironment)
  fullName: Warbler.Startup.Startup(IHostingEnvironment)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 21
  assemblies:
  - cs.temp.dll
  namespace: Warbler
  syntax:
    content: public Startup(IHostingEnvironment env)
    parameters:
    - id: env
      type: IHostingEnvironment
    content.vb: Public Sub New(env As IHostingEnvironment)
  overload: Warbler.Startup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Startup.Main(System.String[])
  commentId: M:Warbler.Startup.Main(System.String[])
  id: Main(System.String[])
  parent: Warbler.Startup
  langs:
  - csharp
  - vb
  name: Main(String[])
  nameWithType: Startup.Main(String[])
  fullName: Warbler.Startup.Main(System.String[])
  type: Method
  source:
    id: Main
    path: ''
    startLine: 33
  assemblies:
  - cs.temp.dll
  namespace: Warbler
  syntax:
    content: public static void Main(string[] args)
    parameters:
    - id: args
      type: System.String[]
    content.vb: Public Shared Sub Main(args As String())
  overload: Warbler.Startup.Main*
  nameWithType.vb: Startup.Main(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Warbler.Startup.Main(System.String())
  name.vb: Main(String())
- uid: Warbler.Startup.ConfigureServices(IServiceCollection)
  commentId: M:Warbler.Startup.ConfigureServices(IServiceCollection)
  id: ConfigureServices(IServiceCollection)
  parent: Warbler.Startup
  langs:
  - csharp
  - vb
  name: ConfigureServices(IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
  fullName: Warbler.Startup.ConfigureServices(IServiceCollection)
  type: Method
  source:
    id: ConfigureServices
    path: ''
    startLine: 42
  assemblies:
  - cs.temp.dll
  namespace: Warbler
  syntax:
    content: public IServiceProvider ConfigureServices(IServiceCollection services)
    parameters:
    - id: services
      type: IServiceCollection
    return:
      type: System.IServiceProvider
    content.vb: Public Function ConfigureServices(services As IServiceCollection) As IServiceProvider
  overload: Warbler.Startup.ConfigureServices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Startup.Configure(IApplicationBuilder,IHostingEnvironment,System.IServiceProvider)
  commentId: M:Warbler.Startup.Configure(IApplicationBuilder,IHostingEnvironment,System.IServiceProvider)
  id: Configure(IApplicationBuilder,IHostingEnvironment,System.IServiceProvider)
  parent: Warbler.Startup
  langs:
  - csharp
  - vb
  name: Configure(IApplicationBuilder, IHostingEnvironment, IServiceProvider)
  nameWithType: Startup.Configure(IApplicationBuilder, IHostingEnvironment, IServiceProvider)
  fullName: Warbler.Startup.Configure(IApplicationBuilder, IHostingEnvironment, System.IServiceProvider)
  type: Method
  source:
    id: Configure
    path: ''
    startLine: 109
  assemblies:
  - cs.temp.dll
  namespace: Warbler
  syntax:
    content: public void Configure(IApplicationBuilder app, IHostingEnvironment env, IServiceProvider serviceProvider)
    parameters:
    - id: app
      type: IApplicationBuilder
    - id: env
      type: IHostingEnvironment
    - id: serviceProvider
      type: System.IServiceProvider
    content.vb: Public Sub Configure(app As IApplicationBuilder, env As IHostingEnvironment, serviceProvider As IServiceProvider)
  overload: Warbler.Startup.Configure*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Warbler
  commentId: N:Warbler
  isExternal: false
  name: Warbler
  nameWithType: Warbler
  fullName: Warbler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Startup.#ctor*
  commentId: Overload:Warbler.Startup.#ctor
  isExternal: false
  name: Startup
  nameWithType: Startup.Startup
  fullName: Warbler.Startup.Startup
- uid: IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: IHostingEnvironment
- uid: Warbler.Startup.Main*
  commentId: Overload:Warbler.Startup.Main
  isExternal: false
  name: Main
  nameWithType: Startup.Main
  fullName: Warbler.Startup.Main
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Warbler.Startup.ConfigureServices*
  commentId: Overload:Warbler.Startup.ConfigureServices
  isExternal: false
  name: ConfigureServices
  nameWithType: Startup.ConfigureServices
  fullName: Warbler.Startup.ConfigureServices
- uid: IServiceCollection
  commentId: '!:IServiceCollection'
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Warbler.Startup.Configure*
  commentId: Overload:Warbler.Startup.Configure
  isExternal: false
  name: Configure
  nameWithType: Startup.Configure
  fullName: Warbler.Startup.Configure
- uid: IApplicationBuilder
  commentId: '!:IApplicationBuilder'
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: IApplicationBuilder
