### YamlMime:ManagedReference
items:
- uid: Warbler.Tests.Repositories.TestSqlUserRepository
  commentId: T:Warbler.Tests.Repositories.TestSqlUserRepository
  id: TestSqlUserRepository
  parent: Warbler.Tests.Repositories
  children:
  - Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity
  - Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  - Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  langs:
  - csharp
  - vb
  name: TestSqlUserRepository
  nameWithType: TestSqlUserRepository
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository
  type: Class
  source:
    id: TestSqlUserRepository
    path: ''
    startLine: 3336
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Tests.Repositories
  syntax:
    content: public class TestSqlUserRepository
    content.vb: Public Class TestSqlUserRepository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity
  commentId: M:Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity
  id: CreateUniversity
  parent: Warbler.Tests.Repositories.TestSqlUserRepository
  langs:
  - csharp
  - vb
  name: CreateUniversity()
  nameWithType: TestSqlUserRepository.CreateUniversity()
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity()
  type: Method
  source:
    id: CreateUniversity
    path: ''
    startLine: 3347
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Tests.Repositories
  syntax:
    content: public Task CreateUniversity()
    return:
      type: Task
    content.vb: Public Function CreateUniversity As Task
  overload: Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  commentId: M:Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  id: IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  parent: Warbler.Tests.Repositories.TestSqlUserRepository
  langs:
  - csharp
  - vb
  name: IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel()
  nameWithType: TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel()
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel()
  type: Method
  source:
    id: IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
    path: ''
    startLine: 3374
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Tests.Repositories
  syntax:
    content: public Task IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel()
    return:
      type: Task
    content.vb: Public Function IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel As Task
  overload: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  commentId: M:Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  id: IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  parent: Warbler.Tests.Repositories.TestSqlUserRepository
  langs:
  - csharp
  - vb
  name: IsNewAsync_Should_Be_True_If_User_Was_Recently_Created()
  nameWithType: TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created()
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created()
  type: Method
  source:
    id: IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
    path: ''
    startLine: 3385
  assemblies:
  - cs.temp.dll
  namespace: Warbler.Tests.Repositories
  syntax:
    content: public Task IsNewAsync_Should_Be_True_If_User_Was_Recently_Created()
    return:
      type: Task
    content.vb: Public Function IsNewAsync_Should_Be_True_If_User_Was_Recently_Created As Task
  overload: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Warbler.Tests.Repositories
  commentId: N:Warbler.Tests.Repositories
  isExternal: false
  name: Warbler.Tests.Repositories
  nameWithType: Warbler.Tests.Repositories
  fullName: Warbler.Tests.Repositories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity*
  commentId: Overload:Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity
  isExternal: false
  name: CreateUniversity
  nameWithType: TestSqlUserRepository.CreateUniversity
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository.CreateUniversity
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel*
  commentId: Overload:Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  isExternal: false
  name: IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  nameWithType: TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_False_If_User_Is_In_Any_Channel
- uid: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created*
  commentId: Overload:Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  isExternal: false
  name: IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  nameWithType: TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
  fullName: Warbler.Tests.Repositories.TestSqlUserRepository.IsNewAsync_Should_Be_True_If_User_Was_Recently_Created
