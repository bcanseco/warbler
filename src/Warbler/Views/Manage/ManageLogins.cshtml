@model ManageLoginsViewModel
@{
    ViewData["Title"] = "Manage your external logins";
}

@await Html.PartialAsync("_HeadingPartial", ViewData)

<p class="text-success">@ViewData["StatusMessage"]</p>
@if (Model.CurrentLogins.Count > 0)
{
    <h4>Registered Logins</h4>
    <table class="table">
        <tbody>
        @foreach (var userLoginInfo in Model.CurrentLogins)
        {
            <tr>
                <td>@userLoginInfo.LoginProvider</td>
                <td>
                    @if ((bool)ViewData["ShowRemoveButton"])
                    {
                        <form asp-controller="Manage" asp-action="RemoveLogin" method="post" class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <div>
                                <input asp-for="@userLoginInfo.LoginProvider" name="LoginProvider" type="hidden" />
                                <input asp-for="@userLoginInfo.ProviderKey" name="ProviderKey" type="hidden" />
                                <input type="submit" class="btn btn-default" value="Remove" title="Remove this @userLoginInfo.LoginProvider login from your account" />
                            </div>
                        </form>
                    }
                    else
                    {
                        @: &nbsp;
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}
@if (Model.OtherLogins.Count > 0)
{
    <h4>Add another service to log in.</h4>
    <hr />
    <form asp-controller="Manage" asp-action="LinkLogin" method="post" class="form-horizontal">
        <div id="socialLoginList">
            <p>
                @foreach (var provider in Model.OtherLogins)
                {
                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                }
            </p>
        </div>
    </form>
}
